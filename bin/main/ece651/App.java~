/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ece651;

import java.util.Scanner;

public class App {
    public String getGreeting() {
        return "Welcome to Sally's Stash!";
    }

  public static void placing(int count,String color,int dimen,Board board,Scanner sc,String name) {  
    Draw draw = new Draw();
    while (count > 0) {
          System.out.println("\nPlayer "+name+", you are going place Sally’s stash on the board. Make sure the other player isn’t looking! For each stack, type the coordinate of the upper left side of the stash, followed by either H (for horizontal) or V (for vertical). For example, M4H would place a stack horizontally starting at M4 and going to the right. You have:\n2 Green stacks that are 1x2\n3 Purple stacks that are 1x3\n3 Red stacks that are 1x4\n2 Blue stacks that are 1x6");
          System.out.println("Now please place your " +color+ " stash. You have "+count+" piece.\n");
          String command = sc.next();
          Parsing parsing = new Parsing(command);
          while (command.length() != 3||parsing.checkParErr()) {
            System.out.println("Command is not valid. Please try again!");
            command = sc.next();
            parsing = new Parsing(command);
          }
          
          Stash stash = new Stash(color.charAt(0), dimen, parsing.getX(), parsing.getY());
          if (parsing.getOri() == 'H') {
            stash.putH();
          }
          if (parsing.getOri() == 'V') {
            stash.putV();
          }
          if (board.addStash(stash)) {
            count--;
            draw.printBoard(board);
          }
        }
   
    }

  public static void dig(Board Myboard,Board Opboard,Scanner sc,String name) {
      Draw draw = new Draw();
      System.out.println("Player "+name+"'s turn:");
      draw.printGame(Myboard,Opboard);
      System.out.println("Choose one place to dig:");
      String command = sc.next();
      while (command.length() != 2) {
            System.out.println("Command is not valid. Please try again!");
            command = sc.next();
          }
      Parsing parsing = new Parsing(command);
      Opboard.dig(parsing.getX(), parsing.getY());
    }

  
    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        Board Ab = new Board();
        Board Bb = new Board();
        Scanner sc = new Scanner(System.in);
        placing(2,"Green",2,Ab,sc,"A");
        // placing(3,"Purple",3,Ab,sc,"A");
        // placing(3,"Red",4,Ab,sc,"A");
        // placing(2,"Blue",6,Ab,sc,"A");
        // placing(2,"Green",2,Bb,sc,"B");
        // placing(3,"Purple",3,Bb,sc,"B");
        // placing(3,"Red",4,Bb,sc,"B");
        placing(2,"Blue",6,Bb,sc,"B");
        while(Ab.checkWinner()&&Bb.checkWinner()){
          dig(Ab, Bb, sc, "A");
          if (!Bb.checkWinner()) {
            System.out.println("A is the winner!");
            break;
          }
          dig(Bb, Ab, sc, "B");
          if (!Ab.checkWinner()) {
            System.out.println("B is the winner!");
            break;
          }
        }
        sc.close();
    }
}
